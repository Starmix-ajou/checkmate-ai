name: Build and Push to OCI

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.OCI_IMAGE_NAME }}

jobs:
  build-and-push:
    runs-on: [self-hosted, checkmate]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to OCI Container Registry
        run: |
          echo "${{ secrets.OCI_REGISTRY_PASSWORD }}" | docker login yny.ocir.io -u "${{ secrets.OCI_REGISTRY_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build \
            --platform linux/arm64 \
            -t $IMAGE_NAME:latest \
            -t $IMAGE_NAME:${{ github.sha }} \
            .

          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

      - name: Checkout Manifest Repository
        uses: actions/checkout@v4
        with:
          repository: starmix-ajou/checkmate-manifest
          token: ${{ secrets.PAT_TOKEN }}
          path: manifests

      - name: Update Image Tag in Deployment YAML
        run: |
          sed -i "s|image: $IMAGE_NAME:.*|image: $IMAGE_NAME:${{ github.sha }}|" manifests/apps/ai/deployment.yaml

      - name: Install envsubst
        run: sudo apt-get update && sudo apt-get install -y gettext

      - name: Generate Argo CD Application with Webhook Secret
        run: |
          export WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}"
          envsubst < manifests/apps/backend/application.yaml > manifests/apps/backend/application.yaml.tmp
          mv manifests/apps/backend/application.yaml.tmp manifests/apps/backend/application.yaml

      - name: Commit and Push Changes to Manifest Repo
        run: |
          cd manifests
          git config user.name "yeonnnnjs"
          git config user.email "sungyeon52@gmail.com"
          git commit --allow-empty -am "Update image tag from checkmate-ai"
          git push origin main
